# Copyright 2018 The Bazel Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("//third_party/github.com/bazelbuild/bazel-skylib:rules/copy_file.bzl", "copy_file")

package(default_visibility = ["//visibility:public"])

# Copy the proto file to a matching third_party/... nested directory
# so the runtime require() statements still work
_worker_proto_dir = "third_party/github.com/bazelbuild/bazel/src/main/protobuf"

bzl_library(
    name = "bzl",
    srcs = glob(["*.bzl"]),
    visibility = ["//:__pkg__"],
)

genrule(
    name = "copy_worker_js",
    srcs = ["//packages/worker:npm_package"],
    outs = ["worker.js"],
    cmd = "cp $(execpath //packages/worker:npm_package)/index.js $@",
    visibility = ["//visibility:public"],
)

copy_file(
    name = "copy_worker_proto",
    src = "@build_bazel_rules_typescript//%s:worker_protocol.proto" % _worker_proto_dir,
    out = "%s/worker_protocol.proto" % _worker_proto_dir,
    visibility = ["//visibility:public"],
)

nodejs_binary(
    name = "esbuild_wrapper",
    data = [
        ":copy_worker_proto",
        ":worker.js",
        "@build_bazel_rules_typescript_esbuild_runtime_deps//esbuild",
        "@build_bazel_rules_typescript_esbuild_runtime_deps//minimist",
        "@build_bazel_rules_typescript_esbuild_runtime_deps//protobufjs",
    ],
    entry_point = "esbuild_wrapper.js",
)

filegroup(
    name = "package_contents",
    srcs = glob(["*"]),
    visibility = ["//packages/labs:__pkg__"],
)

filegroup(
    name = "package_deps",
    srcs = [
        ":copy_worker_proto",
        ":worker.js",
    ],
    visibility = ["//packages/labs:__pkg__"],
)
